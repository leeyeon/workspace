<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
	
	<resultMap id="purchaseSelectMap"
			   type="purchase" >
		<result property="tranNo" column="tran_no" jdbcType="INTEGER" />		
		<result property="tranCode" column="tran_status_code" jdbcType="CHAR" />
		<result property="paymentOption" column="payment_option" jdbcType="VARCHAR" />
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR" />
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR" />
		<result property="divyAddr" column="dlvy_addr" jdbcType="VARCHAR" />
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR" />
		<result property="amount" column="amount" jdbcType="NUMERIC" />
		<result property="divyDate" column="dlvy_date" jdbcType="DATE" />
		<result property="orderDate" column="order_date" jdbcType="DATE" />
		<result property="buyer.userId" column="buyer_id" jdbcType="VARCHAR"/>
		<result property="purchaseProd.prodNo" column="prod_no" jdbcType="INTEGER"/>
		<!-- <association property="purchaseProd" resultMap="productSelectMap"/> -->
	</resultMap>
	
	

	<insert id="addPurchase"
			parameterType="purchase">
		INSERT
		INTO transaction
		(tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone,
		dlvy_addr, dlvy_request, dlvy_date, tran_status_code, order_date)
		VALUES (seq_transaction_tran_no.nextval,
				#{purchaseProd.prodNo},
				#{buyer.userId},
				#{paymentOption:VARCHAR},
				#{receiverName:VARCHAR},
				#{receiverPhone:VARCHAR},
				#{divyAddr:VARCHAR},
				#{divyRequest:VARCHAR},
				#{divyDate:DATE},
				'1',
				SYSDATE)
	</insert>
	
	<!-- addPurchase - amount 넣어야 댐.
				<if test="amount == 0"> 1 </if>
				<if test="amount != 0"> #{amount:NUMERIC} </if>, -->

	<select id="getPurchaseByTranNo"
			parameterType="int"
			resultMap="purchaseSelectMap">
		SELECT
		prod_no, buyer_id, payment_option, receiver_name, receiver_phone,
		dlvy_addr, dlvy_request, dlvy_date, amount, tran_status_code, order_date
		FROM transaction
		WHERE tran_no = ${value}
	</select>
	
	<select id="getPurchaseByProdNo"
			parameterType="int" 
			resultMap="purchaseSelectMap">
		SELECT
		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
		FROM product
		WHERE prod_no = ${value}
	</select>

	<update id="updateAmount"
			parameterType="java.util.Map">
		UPDATE product
		<set>
			<if test="code == 0">
				amount = amount - #{purchase.amount:INTEGER}
			</if>
			<if test="code == 1">
				amount = amount + #{purchase.amount:INTEGER}
			</if>
		</set>
		<where>
			prod_no = #{purchase.prodNo}
		</where>
	</update>
	
	<update id="updatePurchase"
			parameterType="purchase">
		UPDATE transaction
		<set>
			payment_option = #{paymentOption:VARCHAR},
			receiver_name = #{receiverName:VARCHAR},
			receiver_phone = #{receiverPhone:VARCHAR},
			dlvy_addr = #{divyAddr:VARCHAR},
			dlvy_request = #{divyRequest:VARCHAR},
			dlvy_date = #{divyDate:DATE}
		</set>
		<where>
			tran_no = #{tranNo}
		</where>
	</update>
	
	<update id="updateTranCode"
			parameterType="purchase">
		UPDATE transaction
		<set>
			tran_status_code = #{tranCode:CHAR}
		</set>
		<where>
			<if test="tranCode == 3">
				tran_no = #{tranNo}
			</if>
			<if test="tranCode != 3">
				prod_no = #{purchaseProd.prodNo}
			</if>
		</where>
	</update>
	
	<select id="getList"
			parameterType="map"
			resultMap="purchaseSelectMap">
		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
				FROM	( 
				<if test="listCode == 'purchase'">
					<include refid="selectPurchaseSql" />
				</if>
				<if test="listCode == 'sale'">
					<include refid="selectSaleSql" />
				</if>) inner_table
				WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	</select>
		
	<select id="getTotalCount"
			parameterType="java.util.Map"
			resultType="int">
		SELECT COUNT(*)
		FROM ( 	<if test="listCode == 'purchase'">
					<include refid="selectPurchaseSql" />
				</if>
				<if test="listCode == 'sale'">
					<include refid="selectSaleSql" />
				</if> ) countTable
	</select>
	
	<sql id="selectSaleSql">
		SELECT
		transaction.amount AS amount, tran_status_code, product.prod_no AS prod_no,
		user_id, prod_name, price, image_file, product.reg_date AS reg_date
		FROM product, transaction, users
		<where>
			product.prod_no = transaction.prod_no(+)
			AND transaction.buyer_id = users.user_id
			AND role = 'user'
		</where>
		ORDER BY tran_status_code NULLS FIRST
		<if test="search.searchOrderbyPrice != null">
			<if test="search.searchOrderbyPrice == 0 and search.searchOrderbyPrice !='' ">
				, price DESC
			</if>
			<if test="search.searchOrderbyPrice == 1 and search.searchOrderbyPrice !='' ">
				, price ASC
			</if>
		</if>
	</sql>
	
	<sql id="selectPurchaseSql">
		SELECT
		DISTINCT
		tran_no, transaction.prod_no AS prod_no, buyer_id
		receiver_name, receiver_phone, tran_status_code
		FROM transaction, product
		<where>
			transaction.prod_no = product.prod_no
			AND buyer_id = #{buyerId}
		</where>
		ORDER BY tran_no
	</sql>
	 
</mapper>